{
  "variables": {
    "python": "# Integer variable\ncount = 10\ncount += 1\nprint(count)\n\n# Float variable\nprice = 420.99\nprice = price - 0.30\nprint(price)\n\n# String variable\nmessage = \"What the sigma\"\nmessage += \" fr fr\"\nprint(message)\n\n# Boolean variable\nis_leet = True\nis_leet = not is_leet\nprint(is_leet)",
    "c": "#include <stdio.h>\n#include <string.h>\n#include <stdbool.h>\n\nint main() {\n    // Integer variable\n    int count = 10;\n    count += 1;\n    printf(\"%d\\n\", count);\n\n    // Float variable\n    float price = 420.99;\n    price = price - 0.30;\n    printf(\"%f\\n\", price);\n\n    // String variable\n    char message[100] = \"What the sigma\";\n    strcat(message, \" fr fr\");\n    puts(message);\n\n    // Boolean variable\n    bool is_leet = true;\n    is_leet = !is_leet;\n    printf(\"%d\\n\", is_leet);\n}",
    "cpp": "#include <iostream>\n\nint main() {\n    // Integer variable\n    int count = 10;\n    count += 1;\n    std::cout << count << std::endl;\n\n    // Float variable\n    float price = 420.99;\n    price = price - 0.30;\n    std::cout << price << std::endl;\n\n    // String variable\n    std::string message = \"What the sigma\";\n    message += \" fr fr\";\n    std::cout << message << std::endl;\n\n    // Boolean variable\n    bool is_leet = true;\n    is_leet = !is_leet;\n    std::cout << is_leet << std::endl;\n}",
    "csharp": "// Integer variable\nint count = 10;\ncount += 1;\nConsole.WriteLine(count);\n\n// Float variable\nfloat price = 420.99f; // 'f' suffix indicates a float literal\nprice = price - 0.30f; // 'f' suffix for float literals\nConsole.WriteLine(price);\n\n// String variable\nstring message = \"What the sigma\";\nmessage += \" fr fr\";\nConsole.WriteLine(message);\n\n// Boolean variable\nbool is_leet = true;\nis_leet = !is_leet;\nConsole.WriteLine(is_leet);",
    "java": "public static void main(String[] args) {\n    // Integer variable\n    int count = 10;\n    count += 1;\n    System.out.println(count);\n\n    // Float variable\n    float price = 420.99f; // 'f' suffix indicates a float literal\n    price = price - 0.30f; // 'f' suffix for float literals\n    System.out.println(price);\n\n    // String variable\n    String message = \"What the sigma\";\n    message += \" fr fr\";\n    System.out.println(message);\n\n    // Boolean variable\n    boolean isLeet = true;\n    isLeet = !isLeet;\n    System.out.println(isLeet);\n}",
    "javascript": "// Integer variable\nlet count = 10\ncount += 1\nconsole.log(count)\n\n// Float variable\nlet price = 420.99\nprice = price - 0.30\nconsole.log(price)\n\n// String variable\nlet message = \"What the sigma\"\nmessage += \" fr fr\"\nconsole.log(message)\n\n// Boolean variable\nlet is_leet = true\nis_leet = !is_leet\nconsole.log(is_leet)"
  },
  "if-statements": {
    "python": "# Identify age group\nage = 22\n\nif age <= 12:\n    print(\"You're a kid!\")\n    \nelif age <= 18:\n    print(\"You're a teen!\")\n\nelif age <= 60:\n    if age <= 25:\n        print(\"You're a young adult!\")\n        \n    else:\n        print(\"You're an adult!\")\n\nelse:\n    print(\"You're old!\")",
    "c": "#include <stdio.h>\n\nint main() {\n    // Identify age group\n    int age = 22;\n\n    if (age <= 12) {\n        puts(\"You're a kid!\");\n\n    } else if (age <= 18) {\n        puts(\"You're a teen!\");\n\n    } else if (age <= 60) {\n        if (age <= 25) {\n            puts(\"You're a young adult!\");\n        \n        } else {\n            puts(\"You're an adult!\");\n        }\n    \n    } else {\n        puts(\"You're old!\");\n    }\n\n    return 0;\n}",
    "cpp": "#include <iostream>\n\nint main() {\n    // Identify age group\n    int age = 22;\n\n    if (age <= 12) {\n        std::cout << \"You're a kid!\" << std::endl;\n\n    } else if (age <= 18) {\n        std::cout << \"You're a teen!\" << std::endl;\n\n    } else if (age <= 60) {\n        if (age <= 25) {\n            std::cout << \"You're a young adult!\" << std::endl;\n\n        } else {\n            std::cout << \"You're an adult!\" << std::endl;\n        }\n        \n    } else {\n        std::cout << \"You're old!\" << std::endl;\n    }\n\n    return 0;\n}",
    "csharp": "// Identify age group\nint age = 22;\n\nif (age <= 12)\n{\n    Console.WriteLine(\"You're a kid!\");\n} \nelse if (age <= 18)\n{\n    Console.WriteLine(\"You're a teen!\");\n} \nelse if (age <= 60)\n{\n    if (age <= 25)\n    {\n        Console.WriteLine(\"You're a young adult!\");\n    } \n    else\n    {\n        Console.WriteLine(\"You're an adult!\");\n    }\n} \nelse\n{\n    Console.WriteLine(\"You're old!\");\n}",
    "java": "public static void main(String[] args) {\n    // Identify age group\n    int age = 22;\n\n    if (age <= 12) {\n        System.out.println(\"You're a kid!\");\n\n    } else if (age <= 18) {\n        System.out.println(\"You're a teen!\");\n\n    } else if (age <= 60) {\n        if (age <= 25) {\n            System.out.println(\"You're a young adult!\");\n\n        } else {\n            System.out.println(\"You're an adult!\");\n        }\n        \n    } else {\n        System.out.println(\"You're old!\");\n    }\n}",
    "javascript": "// Identify age group\nlet age = 22;\n\nif (age <= 12) {\n    console.log(\"You're a kid!\");\n\n} else if (age <= 18) {\n    console.log(\"You're a teen!\");\n\n} else if (age <= 60) {\n    if (age <= 25) {\n        console.log(\"You're a young adult!\");\n\n    } else {\n        console.log(\"You're an adult!\");\n    }\n    \n} else {\n    console.log(\"You're old!\");\n}"
  },
  "while-loops": {
    "python": "count = 10  # Starting countdown number\n\nwhile count >= 0:\n    # Skip even numbers\n    if count % 2 == 0:\n        count -= 1\n        continue\n    \n    # Print the current count\n    print(count)\n    \n    count -= 1  # Decrement the counter",
    "c": "#include <stdio.h>\n\nint main() {\n    int count = 10;  // Starting countdown number\n\n    while (count >= 0) {\n        // Skip even numbers\n        if (count % 2 == 0) {\n            count--;\n            continue;\n        }\n\n        // Print the current count\n        printf(\"%d\\n\", count);\n\n        count--; // Decrement the counter\n    }\n\n    return 0;\n}",
    "cpp": "#include <iostream>\n\nint main() {\n    int count = 10;  // Starting countdown number\n\n    while (count >= 0) {\n        // Skip even numbers\n        if (count % 2 == 0) {\n            count--;\n            continue;\n        }\n\n        // Print the current count\n        std::cout << count << std::endl;\n\n        count--; // Decrement the counter\n    }\n\n    return 0;\n}",
    "csharp": "// Initialize a counter\nint count = 10;  // Starting countdown number\n\nwhile (count >= 0)\n{\n    // Skip even numbers\n    if (count % 2 == 0)\n    {\n        count--;\n        continue;\n    }\n\n    // Print the current count\n    Console.WriteLine(count);\n    \n    count--; // Decrement the counter\n}",
    "java": "public static void main(String[] args) {\n    int count = 10;  // Starting countdown number\n\n    while (count >= 0) {\n        // Skip even numbers\n        if (count % 2 == 0) {\n            count--;\n            continue;\n        }\n\n        // Print the current count\n        System.out.println(count);\n        \n        count--; // Decrement the counter\n    }\n}",
    "javascript": "let count = 10;  // Starting countdown number\n\nwhile (count >= 0) {\n    // Skip even numbers\n    if (count % 2 === 0) {\n        count--;\n        continue;\n    }\n\n    // Print the current count\n    console.log(count);\n    \n    count--; // Decrement the counter\n}"
  },
  "for-loops": {
    "python": "# Print numbers from 1 to 20 with even or odd indication\nfor num in range(1, 21):\n    if num % 2 == 0:\n        print(f\"{num} is even\")\n    else:\n        print(f\"{num} is odd\")",
    "c": "#include <stdio.h>\n\nint main() {\n    // Print numbers from 1 to 20 with even or odd indication\n    for (int num = 1; num <= 20; num++) {\n        if (num % 2 == 0) {\n            printf(\"%d is even\\n\", num);\n        } else {\n            printf(\"%d is odd\\n\", num);\n        }\n    }\n    return 0;\n}",
    "cpp": "#include <iostream>\n\nint main() {\n    // Print numbers from 1 to 20 with even or odd indication\n    for (int num = 1; num <= 20; num++) {\n        if (num % 2 == 0) {\n            std::cout << num << \" is even\" << std::endl;\n        } else {\n            std::cout << num << \" is odd\" << std::endl;\n        }\n    }\n    return 0;\n}",
    "csharp": "// Print numbers from 1 to 20 with even or odd indication\nfor (int num = 1; num <= 20; num++)\n{\n    if (num % 2 == 0)\n    {\n        Console.WriteLine($\"{num} is even\");\n    }\n    else\n    {\n        Console.WriteLine($\"{num} is odd\");\n    }\n}",
    "java": "public static void main(String[] args) {\n    // Print numbers from 1 to 20 with even or odd indication\n    for (int num = 1; num <= 20; num++) {\n        if (num % 2 == 0) {\n            System.out.println(num + \" is even\");\n        } else {\n            System.out.println(num + \" is odd\");\n        }\n    }\n}",
    "javascript": "// Print numbers from 1 to 20 with even or odd indication\nfor (let num = 1; num <= 20; num++) {\n    if (num % 2 === 0) {\n        console.log(`${num} is even`);\n    } else {\n        console.log(`${num} is odd`);\n    }\n}"
  },
  "foreach-loops": {
    "python": "# Initialize an array of numbers\nnumbers = [5, 12, 15, 20, 25]\n\n# Print each number using a for-each loop\nfor num in numbers:\n    print(f\"Number: {num}\")",
    "c": "#include <stdio.h>\n\nint main() {\n    // Initialize an array of numbers\n    int numbers[] = {5, 12, 15, 20, 25};\n    int length = sizeof(numbers) / sizeof(numbers[0]);\n\n    // Print each number using a for-each loop\n    for (int i = 0; i < length; i++) {\n        printf(\"Number: %d\\n\", numbers[i]);\n    }\n    \n    return 0;\n}",
    "cpp": "#include <iostream>\n#include <vector>\n\nint main() {\n    // Initialize a vector of numbers\n    std::vector<int> numbers = {5, 12, 15, 20, 25};\n\n    // Print each number using a for-each loop\n    for (const int& num : numbers) {\n        std::cout << \"Number: \" << num << std::endl;\n    }\n\n    return 0;\n}",
    "csharp": "// Initialize an array of numbers\nint[] numbers = { 5, 12, 15, 20, 25 };\n\n// Print each number using a for-each loop\nforeach (int num in numbers)\n{\n    Console.WriteLine($\"Number: {num}\");\n}",
    "java": "public static void main(String[] args) {\n    // Initialize an array of numbers\n    int[] numbers = {5, 12, 15, 20, 25};\n\n    // Print each number using a for-each loop\n    for (int num : numbers) {\n        System.out.println(\"Number: \" + num);\n    }\n}",
    "javascript": "// Initialize an array of numbers\nconst numbers = [5, 12, 15, 20, 25];\n\n// Print each number using a for-of loop\nfor (const num of numbers) {\n    console.log(`Number: ${num}`);\n}"
  },
  "functions": {
    "python": "import math\n\n# Function to calculate the area of a circle\ndef calculate_circle_area(radius):\n    # Area formula using exponentiation\n    return math.pi * (radius ** 2)  \n\nradius = 5.0  # Circle radius\narea = calculate_circle_area(radius)\n\n# Print area with two decimal places\nprint(f\"Area: {area:.2f}\")",
    "c": "#include <stdio.h>\n#include <math.h>\n\n// Function to calculate the area of a circle\ndouble calculate_circle_area(double radius) {\n    // Area formula using pow() for exponentiation\n    return M_PI * pow(radius, 2); \n}\n\nint main() {\n    double radius = 5.0;  // Circle radius\n    double area = calculate_circle_area(radius);\n\n    // Print area with two decimal places\n    printf(\"Area: %.2f\\n\", area);\n    return 0;\n}",
    "cpp": "#include <iostream>\n#include <iomanip>\n#include <cmath>\n\n// Function to calculate the area of a circle\ndouble calculate_circle_area(double radius) {\n    // Area formula using pow() for exponentiation\n    return M_PI * pow(radius, 2); \n}\n\nint main() {\n    double radius = 5.0;  // Circle radius\n    double area = calculate_circle_area(radius);\n\n    // Print area with two decimal places\n    std::cout << std::fixed << std::setprecision(2);\n    std::cout << \"Area: \" << area << std::endl;\n    return 0;\n}",
    "csharp": "using System;\n\n// Function to calculate the area of a circle\ndouble CalculateCircleArea(double radius) {\n    // Area formula using Math.PI\n    return Math.PI * (radius * radius);  \n}\n\ndouble radius = 5.0;  // Circle radius\ndouble area = CalculateCircleArea(radius);\n\n// Print area with two decimal places\nConsole.WriteLine($\"Area: {area:F2}\");",
    "java": "// Function to calculate the area of a circle\npublic static double calculateCircleArea(double radius) {\n    // Area formula using Math.pow()\n    return Math.PI * Math.pow(radius, 2);  \n}\n\npublic static void main(String[] args) {\n    double radius = 5.0;  // Circle radius\n    double area = calculateCircleArea(radius);\n\n    // Print area with two decimal places\n    System.out.printf(\"Area: %.2f%n\", area);\n}",
    "javascript": "// Function to calculate the area of a circle\nfunction calculateCircleArea(radius) {\n    // Area formula using Math.pow()\n    return Math.PI * Math.pow(radius, 2);  \n}\n\nlet radius = 5.0;  // Circle radius\nlet area = calculateCircleArea(radius);\n\n// Print area with two decimal places\nconsole.log(`Area: ${area.toFixed(2)}`);"
  },
  "arrays": {
    "python": "# Initialize a list of integers\nnumbers = [10, 20, 30, 40, 50]\n\n# Updating an element\nnumbers[2] = 35\n\n# Appending an element\nnumbers.append(60)\n\n# Inserting an element at index 1\nnumbers.insert(1, 25)\n\n# Deleting an element at index 3\nnumbers.pop(3)\n\n# Print final array\nprint(\"Final array:\", numbers)",
    "c": "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int numbers[10] = {10, 20, 30, 40, 50}; // Initial array with space for additional elements\n    int size = 5; // Current size of the array\n\n    // Updating an element\n    numbers[2] = 35;\n\n    // Appending an element\n    if (size < 10) {\n        numbers[size] = 60; // Append new element\n        size++; // Increase size\n    }\n\n    // Inserting an element at index 1\n    if (size < 10) {\n        for (int i = size; i > 1; i--) {\n            numbers[i] = numbers[i - 1]; // Shift elements\n        }\n        numbers[1] = 25; // Insert new element\n        size++;\n    }\n\n    // Deleting an element at index 3\n    for (int i = 3; i < size - 1; i++) {\n        numbers[i] = numbers[i + 1]; // Shift elements\n    }\n    size--; // Decrease size\n\n    // Print final array\n    printf(\"Final array: \");\n    for (int i = 0; i < size; i++) {\n        printf(\"%d \", numbers[i]);\n    }\n    printf(\"\\n\");\n\n    return 0;\n}",
    "cpp": "#include <iostream>\n#include <vector>\n\nint main() {\n    std::vector<int> numbers = {10, 20, 30, 40, 50};\n\n    // Updating an element\n    numbers[2] = 35;\n\n    // Appending an element\n    numbers.push_back(60);\n\n    // Inserting an element at index 1\n    numbers.insert(numbers.begin() + 1, 25);\n\n    // Deleting an element at index 3\n    numbers.erase(numbers.begin() + 3);\n\n    // Print final array\n    std::cout << \"Final array: \";\n    for (int number : numbers) {\n        std::cout << number << \" \";\n    }\n    std::cout << std::endl;\n\n    return 0;\n}",
    "csharp": "List<int> numbers = new List<int> { 10, 20, 30, 40, 50 };\n\n// Updating an element\nnumbers[2] = 35;\n\n// Appending an element\nnumbers.Add(60);\n\n// Inserting an element at index 1\nnumbers.Insert(1, 25);\n\n// Deleting an element at index 3\nnumbers.RemoveAt(3);\n\n// Print final array\nConsole.WriteLine(\"Final array: \" + string.Join(\", \", numbers));",
    "java": "import java.util.ArrayList;\n\npublic static void main(String[] args) {\n    ArrayList<Integer> numbers = new ArrayList<>();\n    numbers.add(10);\n    numbers.add(20);\n    numbers.add(30);\n    numbers.add(40);\n    numbers.add(50);\n\n    // Updating an element\n    numbers.set(2, 35);\n\n    // Appending an element\n    numbers.add(60);\n\n    // Inserting an element at index 1\n    numbers.add(1, 25);\n\n    // Deleting an element at index 3\n    numbers.remove(3);\n\n    // Print final array\n    System.out.print(\"Final array: \");\n    for (int number : numbers) {\n        System.out.print(number + \" \");\n    }\n    System.out.println();\n}",
    "javascript": "// Initialize an array of numbers\nlet numbers = [10, 20, 30, 40, 50];\n\n// Updating an element\nnumbers[2] = 35;\n\n// Appending an element\nnumbers.push(60);\n\n// Inserting an element at index 1\nnumbers.splice(1, 0, 25);\n\n// Deleting an element at index 3\nnumbers.splice(3, 1);\n\n// Print final array\nconsole.log(\"Final array:\", numbers);"
  },
  "strings": {
    "python": "# String creation\nstr1 = \"Hello\"\nstr2 = \"World\"\n\n# String concatenation\ncombined = str1 + \" \" + str2\nprint(\"Combined String:\", combined)\n\n# String length\nprint(\"Length:\", len(combined))\n\n# String indexing\nfirst_char = str1[0]  # Get the first character of str1\nprint(\"First character of str1:\", first_char)\n\n# String slicing\nsubstring = str2[1:4]  # Get substring from str2 (from index 1 to 3)\nprint(\"Substring of str2:\", substring)\n\n# Check for substring\ncontains = \"lo\" in str1\nprint(\"Does str1 contain 'lo'?\", \"Yes\" if contains else \"No\")",
    "c": "#include <stdio.h>\n#include <string.h>\n\nint main() {\n    // String creation\n    char str1[] = \"Hello\";\n    char str2[] = \"World\";\n\n    // String concatenation\n    char combined[100];\n    strcpy(combined, str1);\n    strcat(combined, \" \");\n    strcat(combined, str2);\n    printf(\"Combined String: %s\\n\", combined);\n\n    // String length\n    int length = strlen(combined);\n    printf(\"Length: %d\\n\", length);\n\n    // String indexing\n    char first_char = str1[0];\n    printf(\"First character of str1: %c\\n\", first_char);\n\n    // String slicing\n    char substring[4];\n    strncpy(substring, str2 + 1, 3); // Copy characters from index 1 to 3\n    substring[3] = '\\0'; // Null-terminate the substring\n    printf(\"Substring of str2: %s\\n\", substring);\n\n    // Check for substring\n    if (strstr(str1, \"lo\")) {\n        printf(\"Does str1 contain 'lo'? Yes\\n\");\n    } else {\n        printf(\"Does str1 contain 'lo'? No\\n\");\n    }\n\n    return 0;\n}",
    "cpp": "#include <iostream>\n#include <string>\n\nint main() {\n    // String creation\n    std::string str1 = \"Hello\";\n    std::string str2 = \"World\";\n\n    // String concatenation\n    std::string combined = str1 + \" \" + str2;\n    std::cout << \"Combined String: \" << combined << std::endl;\n\n    // String length\n    std::cout << \"Length: \" << combined.length() << std::endl;\n\n    // String indexing\n    char first_char = str1[0];\n    std::cout << \"First character of str1: \" << first_char << std::endl;\n\n    // String slicing\n    std::string substring = str2.substr(1, 3); // From index 1, length 3\n    std::cout << \"Substring of str2: \" << substring << std::endl;\n\n    // Check for substring\n    if (str1.find(\"lo\") != std::string::npos) {\n        std::cout << \"Does str1 contain 'lo'? Yes\" << std::endl;\n    } else {\n        std::cout << \"Does str1 contain 'lo'? No\" << std::endl;\n    }\n\n    return 0;\n}",
    "csharp": "// String creation\nstring str1 = \"Hello\";\nstring str2 = \"World\";\n\n// String concatenation\nstring combined = str1 + \" \" + str2;\nConsole.WriteLine(\"Combined String: \" + combined);\n\n// String length\nConsole.WriteLine(\"Length: \" + combined.Length);\n\n// String indexing\nchar firstChar = str1[0];\nConsole.WriteLine(\"First character of str1: \" + firstChar);\n\n// String slicing\nstring substring = str2.Substring(1, 3); // From index 1, length 3\nConsole.WriteLine(\"Substring of str2: \" + substring);\n\n// Check for substring\nbool contains = str1.Contains(\"lo\");\nConsole.WriteLine(\"Does str1 contain 'lo'? \" + (contains ? \"Yes\" : \"No\"));",
    "java": "public static void main(String[] args) {\n    // String creation\n    String str1 = \"Hello\";\n    String str2 = \"World\";\n\n    // String concatenation\n    String combined = str1 + \" \" + str2;\n    System.out.println(\"Combined String: \" + combined);\n\n    // String length\n    System.out.println(\"Length: \" + combined.length());\n\n    // String indexing\n    char firstChar = str1.charAt(0);\n    System.out.println(\"First character of str1: \" + firstChar);\n\n    // String slicing\n    String substring = str2.substring(1, 4); // From index 1 to 3\n    System.out.println(\"Substring of str2: \" + substring);\n\n    // Check for substring\n    boolean contains = str1.contains(\"lo\");\n    System.out.println(\"Does str1 contain 'lo'? \" + (contains ? \"Yes\" : \"No\"));\n}",
    "javascript": "// String creation\nlet str1 = \"Hello\";\nlet str2 = \"World\";\n\n// String concatenation\nlet combined = str1 + \" \" + str2;\nconsole.log(\"Combined String:\", combined);\n\n// String length\nconsole.log(\"Length:\", combined.length);\n\n// String indexing\nlet firstChar = str1[0];  // Get the first character of str1\nconsole.log(\"First character of str1:\", firstChar);\n\n// String slicing\nlet substring = str2.slice(1, 4); // Get substring from str2 (from index 1 to 3)\nconsole.log(\"Substring of str2:\", substring);\n\n// Check for substring\nlet contains = str1.includes(\"lo\");\nconsole.log(\"Does str1 contain 'lo'?\", contains ? \"Yes\" : \"No\");"
  }
}